"use strict";(self.webpackChunkdocusaurus_lms_demo=self.webpackChunkdocusaurus_lms_demo||[]).push([[4498],{3905:(e,t,a)=>{a.d(t,{Zo:()=>m,kt:()=>d});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},s=Object.keys(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=n.createContext({}),p=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},m=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,s=e.originalType,l=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),c=p(a),d=r,f=c["".concat(l,".").concat(d)]||c[d]||u[d]||s;return a?n.createElement(f,i(i({ref:t},m),{},{components:a})):n.createElement(f,i({ref:t},m))}));function d(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=a.length,i=new Array(s);i[0]=c;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var p=2;p<s;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},8065:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>s,metadata:()=>o,toc:()=>p});var n=a(87462),r=(a(67294),a(3905));const s={sidebar_position:1,description:"Enforce your best practices from Salesforce UI and your pipelines"},i="Introduction",o={unversionedId:"index",id:"index",title:"Introduction",description:"Enforce your best practices from Salesforce UI and your pipelines",source:"@site/devops/index.md",sourceDirName:".",slug:"/",permalink:"/devops/",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,description:"Enforce your best practices from Salesforce UI and your pipelines"},sidebar:"defaultSidebar",next:{title:"ApexClass",permalink:"/devops/Sample Rules/ApexClass/"}},l={},p=[{value:"UI integration",id:"ui-integration",level:2},{value:"Setup Enhancement",id:"setup-enhancement",level:2},{value:"Command line integration",id:"command-line-integration",level:2},{value:"Ignore metadata",id:"ignore-metadata",level:2},{value:"Sample Rules on Basic Entities",id:"sample-rules-on-basic-entities",level:2},{value:"EntityDefinition",id:"entitydefinition",level:3},{value:"CustomField",id:"customfield",level:3},{value:"Flow",id:"flow",level:3},{value:"PermissionSet",id:"permissionset",level:3},{value:"ApexClass",id:"apexclass",level:3},{value:"LightningComponentResource",id:"lightningcomponentresource",level:3},{value:"FieldPermissions",id:"fieldpermissions",level:3},{value:"Sample Rules on Omnistudio",id:"sample-rules-on-omnistudio",level:2},{value:"OmniUiCard",id:"omniuicard",level:3},{value:"OmniProcess",id:"omniprocess",level:3},{value:"OmniProcessElement",id:"omniprocesselement",level:3},{value:"OmniDataTransform",id:"omnidatatransform",level:3}],m={toc:p};function u(e){let{components:t,...s}=e;return(0,r.kt)("wrapper",(0,n.Z)({},m,s,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"introduction"},"Introduction"),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Let's bridge the gap between best practice theory and how we enforce it!")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"SF Explorer")," allows you to define and perform simple checks on your orgs Data and Metadata in a simple yet flexible manner. "),(0,r.kt)("p",null,"You can access, run and configure those rules via ",(0,r.kt)("strong",{parentName:"p"},"Devops > Best Practices"),"  "),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"example",src:a(58051).Z,width:"1243",height:"777"})," "),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"You can run the report at a given date. Above 01/01/2024")),(0,r.kt)("h2",{id:"ui-integration"},"UI integration"),(0,r.kt)("p",null,"Once defined, errors will be showned contextually on your records as you navigate through SF Explorer:"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"example",src:a(1816).Z,width:"1060",height:"733"})," "),(0,r.kt)("h2",{id:"setup-enhancement"},"Setup Enhancement"),(0,r.kt)("p",null,"Enhance your Salesforce setup with checks and best practices with a new chrome extension called ",(0,r.kt)("a",{parentName:"p",href:"https://chromewebstore.google.com/detail/salesforce-explorer-enhan/bfbpegnljabcaknhmlfejadihhcndmfi?hl=en-US"},"SF Explorer Advanced Setup")),(0,r.kt)("p",null,"It adds custom message into your Salesforce setup screen to enforce your project rules are enforced. Your Design Authority should be pleased!\nYou can add a custom messages for:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"New Custom Object")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"New Permission Set\nThose messages are configurable in the option page.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"It prevent user from creating duplicate fields")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"It shows similar fields when opening a custom field"))),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"example",src:a(66517).Z,width:"1280",height:"800"})," "),(0,r.kt)("h2",{id:"command-line-integration"},"Command line integration"),(0,r.kt)("p",null,"It is simple to integrate those rules in your current pipelines, for example with a Github Action:"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"example",src:a(59863).Z,width:"713",height:"636"})," "),(0,r.kt)("p",null,"Create a file named ",(0,r.kt)("inlineCode",{parentName:"p"},".env")," with the following content:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"SFEXP_LOGIN=XXX # remove it to use SFDX instead\nSFEXP_PASSWORD=XXX # Password+SecurityToken, remove it to use SFDX instead\nLOGINURL=https://login.salesforce.com #or https://test.salesforce.com\nDATE=TODAY  #or 2024-01-01\nRULES=EntityDefinition,CustomField  #specify to only run rules on EntityDefinition and CustomField - remove param to check all rules\n")),(0,r.kt)("p",null,"To connect with SFDX, don't use the ",(0,r.kt)("inlineCode",{parentName:"p"},"SFEXP_LOGIN"),"/",(0,r.kt)("inlineCode",{parentName:"p"},"SFEXP_PASSWORD")," env var."),(0,r.kt)("p",null,"Run the command:  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cmd"},"npx @sf-explorer/devops.cli\n")),(0,r.kt)("p",null,"The command will generate an output file name ",(0,r.kt)("inlineCode",{parentName:"p"},"testReport.xml")," (in JUnit format)."),(0,r.kt)("h2",{id:"ignore-metadata"},"Ignore metadata"),(0,r.kt)("p",null,"You can ignore specific errors with a file named ",(0,r.kt)("inlineCode",{parentName:"p"},".sfexplorerignore")," (using regex similar to a .gitignore file)"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"ignore an author with @ and the author name"),(0,r.kt)("li",{parentName:"ul"},"ignore a record with its type and target")),(0,r.kt)("h2",{id:"sample-rules-on-basic-entities"},"Sample Rules on Basic Entities"),(0,r.kt)("h3",{id:"entitydefinition"},"EntityDefinition"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/devops/Sample%20Rules/EntityDefinition/"},"A custom object Name must be in english and PascalCase"),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("a",{parentName:"p",href:"/devops/Sample%20Rules/EntityDefinition/"},"A custom object Description is required"),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("a",{parentName:"p",href:"/devops/Sample%20Rules/EntityDefinition/"},"Less than 100 custom fields"),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("a",{parentName:"p",href:"/devops/Sample%20Rules/EntityDefinition/"},"Maximum one custom trigger per object"),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("a",{parentName:"p",href:"/devops/Sample%20Rules/EntityDefinition/"},"Maximum 15 record types per object"),"  "),(0,r.kt)("h3",{id:"customfield"},"CustomField"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/devops/Sample%20Rules/CustomField/"},"A CustomField API Name must be in english and PascalCase"),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("a",{parentName:"p",href:"/devops/Sample%20Rules/CustomField/"},"Custom Fields must have a Description (at least 20 chars)"),"  "),(0,r.kt)("h3",{id:"flow"},"Flow"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/devops/Sample%20Rules/Flow/"},"Flow Description is required (at least 20 chars)"),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("a",{parentName:"p",href:"/devops/Sample%20Rules/Flow/"},"Flow Label must be Short Yet Meaningful"),"  "),(0,r.kt)("h3",{id:"permissionset"},"PermissionSet"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/devops/Sample%20Rules/PermissionSet/"},"Name is following project convention"),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("a",{parentName:"p",href:"/devops/Sample%20Rules/PermissionSet/"},"Description is required (more than 20 chars)"),"  "),(0,r.kt)("h3",{id:"apexclass"},"ApexClass"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/devops/Sample%20Rules/ApexClass/"},"An Apex class name must be PascalCase and use a correct Suffix"),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("a",{parentName:"p",href:"/devops/Sample%20Rules/ApexClass/"},"An ApexClass must follow the best practices"),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("a",{parentName:"p",href:"/devops/Sample%20Rules/ApexClass/"},"An ApexClass must have a Description"),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("a",{parentName:"p",href:"/devops/Sample%20Rules/ApexClass/"},"An ApexClass must have an author"),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("a",{parentName:"p",href:"/devops/Sample%20Rules/ApexClass/"},"Apex variables must be camelCase"),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("a",{parentName:"p",href:"/devops/Sample%20Rules/ApexClass/"},"Apex methods must be camelCase"),"  "),(0,r.kt)("h3",{id:"lightningcomponentresource"},"LightningComponentResource"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/devops/Sample%20Rules/LightningComponentResource/"},"An LWC must have an author"),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("a",{parentName:"p",href:"/devops/Sample%20Rules/LightningComponentResource/"},"An LWC must have a description"),"  "),(0,r.kt)("h3",{id:"fieldpermissions"},"FieldPermissions"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/devops/Sample%20Rules/FieldPermissions/"},"No field level security on Profiles (except System Administrator)"),"  "),(0,r.kt)("h2",{id:"sample-rules-on-omnistudio"},"Sample Rules on Omnistudio"),(0,r.kt)("h3",{id:"omniuicard"},"OmniUiCard"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/devops/Sample%20Rules/OmniUiCard/"},"Flexcards names must be pascal case"),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("a",{parentName:"p",href:"/devops/Sample%20Rules/OmniUiCard/"},"Flexcards must have a description"),"  "),(0,r.kt)("h3",{id:"omniprocess"},"OmniProcess"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/devops/Sample%20Rules/OmniProcess/"},"Omniscript Type should be camel case (for LWC compatibility)"),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("a",{parentName:"p",href:"/devops/Sample%20Rules/OmniProcess/"},"Omniscript SubType must be PascalCase"),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("a",{parentName:"p",href:"/devops/Sample%20Rules/OmniProcess/"},"Omniscripts must have a description"),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("a",{parentName:"p",href:"/devops/Sample%20Rules/OmniProcess/"},"Omniscript must have less than 100 elements"),"  "),(0,r.kt)("h3",{id:"omniprocesselement"},"OmniProcessElement"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/devops/Sample%20Rules/OmniProcessElement/"},"Remote action and DataRaptor Actions must have a description"),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("a",{parentName:"p",href:"/devops/Sample%20Rules/OmniProcessElement/"},"Set Values and Set Errors must start with Set+PascalCase"),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("a",{parentName:"p",href:"/devops/Sample%20Rules/OmniProcessElement/"},"Remote Action must start with 'Invoke+PascalCase'"),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("a",{parentName:"p",href:"/devops/Sample%20Rules/OmniProcessElement/"},"DataRaptor Extract must start with 'DRE+PascalCase'"),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("a",{parentName:"p",href:"/devops/Sample%20Rules/OmniProcessElement/"},"DataRaptor Post must start with 'DRP+PascalCase'"),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("a",{parentName:"p",href:"/devops/Sample%20Rules/OmniProcessElement/"},"DataRaptor Extract must start with 'IP+PascalCase'"),"  "),(0,r.kt)("h3",{id:"omnidatatransform"},"OmniDataTransform"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/devops/Sample%20Rules/OmniDataTransform/"},"DataRaptors must have a description")))}u.isMDXComponent=!0},66517:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/AdvancedSetup-fbcbc50344ea94e6ca20cde2db025011.png"},58051:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/RuleExecution-9880e96ed65990d1e1044540adbd0a4f.png"},59863:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/pipeline-f96184c015783caaaee652013dcf65f4.png"},1816:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/ui-integration-e2da2f71721960ed42dd0a11f7bb2003.png"}}]);