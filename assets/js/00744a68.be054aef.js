"use strict";(self.webpackChunkdocusaurus_lms_demo=self.webpackChunkdocusaurus_lms_demo||[]).push([[8288],{79390:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>d,contentTitle:()=>i,default:()=>m,frontMatter:()=>s,metadata:()=>o,toc:()=>p});var n=t(87462),l=(t(67294),t(3905));const s={},i="ApexClass",o={unversionedId:"Sample Rules/ApexClass/index",id:"Sample Rules/ApexClass/index",title:"ApexClass",description:"An Apex class name must be PascalCase",source:"@site/devops/Sample Rules/ApexClass/index.md",sourceDirName:"Sample Rules/ApexClass",slug:"/Sample Rules/ApexClass/",permalink:"/devops/Sample Rules/ApexClass/",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"Introduction",permalink:"/devops/"},next:{title:"CustomField",permalink:"/devops/Sample Rules/CustomField/"}},d={},p=[{value:"An Apex class name must be PascalCase",id:"an-apex-class-name-must-be-pascalcase",level:2},{value:"Example",id:"example",level:4},{value:"Config to use",id:"config-to-use",level:3},{value:"SOQL Generated",id:"soql-generated",level:3},{value:"An ApexClass must have a Description",id:"an-apexclass-must-have-a-description",level:2},{value:"Example",id:"example-1",level:4},{value:"Config to use",id:"config-to-use-1",level:3},{value:"SOQL Generated",id:"soql-generated-1",level:3},{value:"An ApexClass must have an author",id:"an-apexclass-must-have-an-author",level:2},{value:"Example",id:"example-2",level:4},{value:"Config to use",id:"config-to-use-2",level:3},{value:"SOQL Generated",id:"soql-generated-2",level:3},{value:"Apex variables must be camelCase",id:"apex-variables-must-be-camelcase",level:2},{value:"Config to use",id:"config-to-use-3",level:3},{value:"SOQL Generated",id:"soql-generated-3",level:3},{value:"Apex methods must be camelCase",id:"apex-methods-must-be-camelcase",level:2},{value:"Config to use",id:"config-to-use-4",level:3},{value:"SOQL Generated",id:"soql-generated-4",level:3}],r={toc:p};function m(e){let{components:a,...t}=e;return(0,l.kt)("wrapper",(0,n.Z)({},r,t,{components:a,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"apexclass"},"ApexClass"),(0,l.kt)("h2",{id:"an-apex-class-name-must-be-pascalcase"},"An Apex class name must be PascalCase"),(0,l.kt)("p",null,"Field: ",(0,l.kt)("inlineCode",{parentName:"p"},"Name"),"\nRegex: ",(0,l.kt)("inlineCode",{parentName:"p"},"^[A-Z][A-Za-z0-9]*$"),"  "),(0,l.kt)("h4",{id:"example"},"Example"),(0,l.kt)("p",null,"CustomerAssessmentController  "),(0,l.kt)("h3",{id:"config-to-use"},"Config to use"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "sObject": "ApexClass",\n  "field": "Name",\n  "when": "NamespacePrefix = null",\n  "regex": "^[A-Z][A-Za-z0-9]*$",\n  "message": "An Apex class name must be PascalCase",\n  "goodExample": "CustomerAssessmentController"\n}\n')),(0,l.kt)("h3",{id:"soql-generated"},"SOQL Generated"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"Select Name, LastModifiedBy.Name\n    from ApexClass\n       where  LastModifiedDate > 2024-01-01T00:00:00Z  and NamespacePrefix = null \n       order by LastModifiedDate desc limit 200\n")),(0,l.kt)("h2",{id:"an-apexclass-must-have-a-description"},"An ApexClass must have a Description"),(0,l.kt)("p",null,"Field: ",(0,l.kt)("inlineCode",{parentName:"p"},"description")),(0,l.kt)("h4",{id:"example-1"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"/** \n * BoatDataService exposes utilities to manipulate data related to boat\n * @author \"John Doe\"\n * @date 25/04/2023\n**/\npublic with sharing class BoatDataService {\n    public static final String LENGTH_TYPE = 'Length'; \n\n    @AuraEnabled(cacheable=true)\n    public static List<Boat__c> getBoats(String boatTypeId) {\n    }\n}\n")),(0,l.kt)("h3",{id:"config-to-use-1"},"Config to use"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "sObject": "ApexClass",\n  "field": "Body",\n  "computedField": "description",\n  "when": "NamespacePrefix = null",\n  "nameField": "Name",\n  "message": "An ApexClass must have a Description",\n  "goodExample": "\\n```js\\n/** \\n * BoatDataService exposes utilities to manipulate data related to boat\\n * @author \\"John Doe\\"\\n * @date 25/04/2023\\n**/\\npublic with sharing class BoatDataService {\\n    public static final String LENGTH_TYPE = \'Length\'; \\n\\n    @AuraEnabled(cacheable=true)\\n    public static List<Boat__c> getBoats(String boatTypeId) {\\n    }\\n}\\n```\\n"\n}\n')),(0,l.kt)("h3",{id:"soql-generated-1"},"SOQL Generated"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"Select Body, Name, LastModifiedBy.Name\n    from ApexClass\n       where  LastModifiedDate > 2024-01-01T00:00:00Z  and NamespacePrefix = null \n       order by LastModifiedDate desc limit 200\n")),(0,l.kt)("h2",{id:"an-apexclass-must-have-an-author"},"An ApexClass must have an author"),(0,l.kt)("p",null,"Field: ",(0,l.kt)("inlineCode",{parentName:"p"},"author")),(0,l.kt)("h4",{id:"example-2"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"/** \n * BoatDataService exposes utilities to manipulate data related to boat\n * @author \"John Doe\"\n * @date 25/04/2023\n**/\npublic with sharing class BoatDataService {\n    public static final String LENGTH_TYPE = 'Length'; \n\n    @AuraEnabled(cacheable=true)\n    public static List<Boat__c> getBoats(String boatTypeId) {\n    }\n}\n")),(0,l.kt)("h3",{id:"config-to-use-2"},"Config to use"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "sObject": "ApexClass",\n  "field": "Body",\n  "computedField": "author",\n  "when": "NamespacePrefix = null",\n  "nameField": "Name",\n  "message": "An ApexClass must have an author",\n  "goodExample": "\\n```js\\n/** \\n * BoatDataService exposes utilities to manipulate data related to boat\\n * @author \\"John Doe\\"\\n * @date 25/04/2023\\n**/\\npublic with sharing class BoatDataService {\\n    public static final String LENGTH_TYPE = \'Length\'; \\n\\n    @AuraEnabled(cacheable=true)\\n    public static List<Boat__c> getBoats(String boatTypeId) {\\n    }\\n}\\n```\\n"\n}\n')),(0,l.kt)("h3",{id:"soql-generated-2"},"SOQL Generated"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"Select Body, Name, LastModifiedBy.Name\n    from ApexClass\n       where  LastModifiedDate > 2024-01-01T00:00:00Z  and NamespacePrefix = null \n       order by LastModifiedDate desc limit 200\n")),(0,l.kt)("h2",{id:"apex-variables-must-be-camelcase"},"Apex variables must be camelCase"),(0,l.kt)("p",null,"Field: ",(0,l.kt)("inlineCode",{parentName:"p"},"SymbolTable.variables"),"\nRegex: ",(0,l.kt)("inlineCode",{parentName:"p"},"^[a-z][A-Za-z0-9]*$"),"  "),(0,l.kt)("h3",{id:"config-to-use-3"},"Config to use"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "sObject": "ApexClass",\n  "field": "SymbolTable",\n  "computedField": "SymbolTable.variables",\n  "regex": "^[a-z][A-Za-z0-9]*$",\n  "tooling": true,\n  "when": "NamespacePrefix = null",\n  "nameField": "Name",\n  "message": "Apex variables must be camelCase"\n}\n')),(0,l.kt)("h3",{id:"soql-generated-3"},"SOQL Generated"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"Select SymbolTable, Name, LastModifiedBy.Name\n    from ApexClass\n       where  LastModifiedDate > 2024-01-01T00:00:00Z  and NamespacePrefix = null \n       order by LastModifiedDate desc limit 200\n")),(0,l.kt)("h2",{id:"apex-methods-must-be-camelcase"},"Apex methods must be camelCase"),(0,l.kt)("p",null,"Field: ",(0,l.kt)("inlineCode",{parentName:"p"},"SymbolTable.methods"),"\nRegex: ",(0,l.kt)("inlineCode",{parentName:"p"},"^[a-z][A-Za-z0-9]*$"),"  "),(0,l.kt)("h3",{id:"config-to-use-4"},"Config to use"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "sObject": "ApexClass",\n  "field": "SymbolTable",\n  "computedField": "SymbolTable.methods",\n  "regex": "^[a-z][A-Za-z0-9]*$",\n  "tooling": true,\n  "when": "NamespacePrefix = null",\n  "nameField": "Name",\n  "message": "Apex methods must be camelCase"\n}\n')),(0,l.kt)("h3",{id:"soql-generated-4"},"SOQL Generated"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"Select SymbolTable, Name, LastModifiedBy.Name\n    from ApexClass\n       where  LastModifiedDate > 2024-01-01T00:00:00Z  and NamespacePrefix = null \n       order by LastModifiedDate desc limit 200\n")))}m.isMDXComponent=!0}}]);